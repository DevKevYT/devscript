#THREAD BASICS [BETA]  by DevKev for version 1.9.10#

#Threads allow to run multiple commands in parralel or create "sub processes"#
#You can create a thread using the "thread [name] [block]" command.
This command will create a variable with the thread name
Threads are automatically executed on creation, but you can pause it#
	thread "my-thread" {
		println cool;
		pause;
		println finished;
	};


#Access thread blocks with the variable name#
	println $my-thread;


#You can pause or halt thread execution by using the "pause" command (As seen in "my-thread" above)
Using the "wake [thread]" command to wakt the specified thread#
	wait 1000;		#<- We wait a second to execute the "wake", so we dont wake "my-thread" while it is still printing "cool"#
	wake $my-thread;


#If you want to create threads that dont execute immediately, just pause it!#
	thread "easy" {
		pause;
		println "Thread running!";
	};
	println "Waiting ...";
	wait 1000;
	wake $easy;
	println "Executing thread!\n";


#You can also wait until a thread is finished using the "waitfor [thread]" command#
	thread "slowProcess" {
		for i 5 {
			wait 500;			#<- This is some process that takes veeery long ;)#
			println "Calculating ..."
		};
	};
	println "Pausing ...";
	waitfor $slowProcess;			#<- We wait until "slowProcess" is finished to continue#
	println "done!";

