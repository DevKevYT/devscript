#CONDITIONAL EXPRESSIONS BASICS by DevKev for version 1.9.10#

#To create if statements, you can use the "if [boolean] [block]" command
Remember, unlike java or similar languages, you still need to use ";" to terminate a command even if it ends with a "}"#
	variable = $true;
	if $variable {
		println "The variable is true!";
	};
	

#If statements work like in most programming languages:#
	if $false {
		#...#
	} else {
		#...#
	};
	
	
#"elseif" is also possible#
	if $false {
		#...#
	} elseif $true {
		#...#
	} else {
		#...#
	};
	
	
#You can also use the command [boolean] ? [???] [???]" as ternary expression
If the condition is true, the 3rd argument is returned, otherwise the 4th#
	condition = $true;
	println ($condition ? "Condition is true" "Condition is false");
	
	
#To compare two variables you can use the following commands with the two example Variables $var0 and $var1:
	"$var0 == $var1" 		<- Returns $true, if $var0's toString() equals $var1
	"$var0 != $var1"		<- Returns $true, if $var0's toString() does not equal $var1
	"$var0 lt $var1"		<- Returns $true, if $var0 is less than $var1 (Works only with numbers)
	"$var0 lteq $var1"		<- Returns $true, if $var0 is less or equal than $var1 (Works only with numbers)
	"$var0 gt $var1"		<- Returns $true, if $var0 is greater than $var1 (Works only with numbers)
	"$var0 gteq $var1"		<- Returns $true, if $var0 is greater or equal than $var1 (Works only with numbers)#
	
	var0 = 22;
	var1 = 12;
	if ($var0 gt $var1) {
		println "var0 is greater than var1";
	};
	

#You can also use logical operators "and" and "or"#
	result0 = ($true and $false);
	println $result0;
	result1 = ($true and $false or $true);
	println $result1;
	result1 = (($true and $false) or ($true and $true));
	println $result1;

#The following example prints, if x is inbetween 10 and 20 or less than 0#
	x = 20;
	if (($x gteq 10) and ($x lteq 20) or ($x lt 0)) {
		println "x is between 10 and 20 or less than 0";
	} else {
		println "x is less than 10 and greater than 20 and above zero";
	};

